#!/bin/bash 

HOSTOS=$(uname | tr '[:upper:]' '[:lower:]')

# Some functions
# Do we have Vagrant & Vbox?
die () {
 
 case $1 in
  1) echo "EasyGitian already running"
   ;;
  *) echo "unknown error"
   ;;
 esac
}

check_self () {
 # Crude check to see if a build is running 
 # shuold be corresponding check in the VM
 if [ ${HOSTOS} = "darwin"] ; then
   ps -aef |grep EasyGitian || die 1
 elif [ ${HOSTOS} = "linux"] ; then
   ps ax | grep EasyGitian || die 1
 fi
}

install_prereqs () {
which vagrant && which VBoxManage && touch ./.prereq_install_complete 
if [ -f ./.prereq_install_complete ] ; then 
  echo "Install already completed"
else
  echo "Attempting to help you install Vagrant & Virtualbox"
  ./${HOSTOS}-base-system.sh
fi
}

first_run () {
 if [ -f .vbox-vm-initialized ] ; then
  echo "VM Initialized"
 else  
   echo "Initializing VM"
   ./VBox_VM_Initialize.sh
   echo "VM Initialized"
 fi
}

launch_vm () {
 test -f .vbox-vm-initialized || first_run
 vagrant status | grep -i running || vagrant up
}

make_env () {
 test -f .skip_config ||  ./USER_CONFIG.sh
}

make_tarball () {
  test -f .skip_osx_builds || ./make_SDK_tarball.sh
}

run_build () {
 test -f  .prereq_install_complete || install_prereqs
 echo "Vagrant and Virtualbox installed"
 test -f ./inputs/MacOSX10.11.sdk.tar.gz || make_tarball
 echo "OSX SDK tarball checked"
 test -f ./USER_CONFIG.env || make_env
 echo "Gitian settings configuration checked"
 test -f .vbox-vm-initialized || first_run
 echo "Virtualbox VM initialized"
 vagrant status | grep running || vagrant up && \
  echo "VM Started - running build" && \
  vagrant ssh -c './run-gitian-build'
}

clean_vm () {
 test -f .vbox-vm-initialized && echo "VM Not initialized" && exit 2
 vagrant status | grep "not created" && echo "VM Not created" && exit 1
 vagrant status | grep running && vagrant halt
 vagrant snapshot list default |grep Gitian-Clean &&  vagrant snapshot restore default Gitian-Clean
}

destroy_vm () {
 vagrant destroy && \
   rm .vbox-vm-initialized
}
rebuild_vm () {
 destroy_vm 
 first_run
}

case $1 in

install_prereqs) install_prereqs
               ;;
      first_run) first_run
               ;;
       make_env) make_env
               ;;
   make_tarball) make_tarball
               ;;
      run_build) run_build
               ;;
       clean_vm) clean_vm
               ;;
     rebuild_vm) rebuild_vm
               ;;
     destroy_vm) destroy_vm
               ;;
	     "") echo "No option specified, running build"
	         run_build
	       ;;
	     *) cat USAGE.md
	         exit 1
	       ;;
esac
